{"ast":null,"code":"var _jsxFileName = \"/home/maxime/wcs/Projet_2/bordeaux_p2_sept2019_wildFighter/src/components/fightZone/FightZone.js\";\nimport React from 'react';\nimport '../../styles/css/fightZone/FightZone.css';\nimport Tap from './Tap';\nimport DisplayCountdown from './DisplayCountdown';\nimport mapFight from '../../styles/assets/newyorkFit.jpg';\nimport perso1 from '../../styles/assets/persos/harley.png';\nimport perso2 from '../../styles/assets/persos/deadpool.png';\nimport ModaleInstructions from './ModaleInstructions';\n\nclass FightZone extends React.Component {\n  constructor() {\n    super();\n\n    this.handleWinnerLeft = () => {\n      this.setState({\n        winP1: true\n      });\n    };\n\n    this.handleWinnerRight = () => {\n      this.setState({\n        winP2: true\n      });\n    };\n\n    this.handleCloseModal = () => {\n      this.setState({\n        modaleIsOpen: !this.state.modaleIsOpen\n      });\n    };\n\n    this.handleSetTimeOut = () => {\n      const x = this;\n      const counter = this.state.counter;\n      setTimeout(function () {\n        if (counter > 0 && counter !== 0) {\n          x.setState({\n            counter: counter - 1\n          });\n        }\n      }, 1000);\n    };\n\n    this.state = {\n      modaleIsOpen: false,\n      counter: 2,\n      winP1: false,\n      winP2: false\n    };\n    this.handleCloseModal = this.handleCloseModal.bind(this);\n    this.handleSetTimeOut = this.handleSetTimeOut.bind(this); // this.handleWinnerLeft = this.handleWinnerLeft.bind(this);\n  } // componentDidMount() {\n  //   console.log(this.state.counter);\n  //   if (this.state.counter === 0) {\n  //     this.handleWinner();\n  //   }\n  // }\n\n\n  componentDidUpdate() {\n    const _this$state = this.state,\n          winP1 = _this$state.winP1,\n          counter = _this$state.counter;\n\n    if (counter === 0 && !winP1) {\n      console.log(\"ok\");\n      this.setState({\n        winP1: true\n      });\n    }\n  } // componentDidUpdate(prevprops) {\n  //   console.log(this.state.counter);\n  //   if (prevprops.counter === 0 /*&&  */) {\n  //     this.handleWinnerLeft();\n  //   } else if (prevprops.counter === 0 /*&&  */) {\n  //     this.handleWinnerRight();\n  //   }\n  // }\n\n\n  render() {\n    const _this$state2 = this.state,\n          modaleIsOpen = _this$state2.modaleIsOpen,\n          counter = _this$state2.counter;\n    return React.createElement(\"div\", {\n      className: \"mapFond\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: this.state.winP1 === true ? 'position1' : 'position2',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"winnerIs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"YOU WIN\"))), React.createElement(\"img\", {\n      className: \"fightMap\",\n      src: mapFight,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(DisplayCountdown, {\n      counter: counter,\n      setTimeOut: this.handleSetTimeOut,\n      modaleIsOpen: modaleIsOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(ModaleInstructions, {\n      closeModal: this.handleCloseModal,\n      modaleIsOpen: modaleIsOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"fighters\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"leftPlayer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(Tap, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      className: \"fighter1\",\n      src: perso1,\n      alt: \"harley\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"rightPlayer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(Tap, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      className: \"fighter2\",\n      src: perso2,\n      alt: \"deadpool\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default FightZone;","map":{"version":3,"sources":["/home/maxime/wcs/Projet_2/bordeaux_p2_sept2019_wildFighter/src/components/fightZone/FightZone.js"],"names":["React","Tap","DisplayCountdown","mapFight","perso1","perso2","ModaleInstructions","FightZone","Component","constructor","handleWinnerLeft","setState","winP1","handleWinnerRight","winP2","handleCloseModal","modaleIsOpen","state","handleSetTimeOut","x","counter","setTimeout","bind","componentDidUpdate","console","log","render"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport '../../styles/css/fightZone/FightZone.css';\nimport Tap from './Tap';\nimport DisplayCountdown from './DisplayCountdown';\nimport mapFight from '../../styles/assets/newyorkFit.jpg';\nimport perso1 from '../../styles/assets/persos/harley.png';\nimport perso2 from '../../styles/assets/persos/deadpool.png';\nimport ModaleInstructions from './ModaleInstructions';\n\nclass FightZone extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      modaleIsOpen: false,\n      counter: 2,\n      winP1: false,\n      winP2: false\n    };\n    this.handleCloseModal = this.handleCloseModal.bind(this);\n    this.handleSetTimeOut = this.handleSetTimeOut.bind(this);\n    // this.handleWinnerLeft = this.handleWinnerLeft.bind(this);\n  }\n\n  // componentDidMount() {\n  //   console.log(this.state.counter);\n\n  //   if (this.state.counter === 0) {\n  //     this.handleWinner();\n  //   }\n  // }\n\n  componentDidUpdate() {\n    const { winP1, counter } = this.state;\n    if (counter === 0 && !winP1) {\n      console.log(\"ok\")\n          this.setState({ winP1: true });\n    }\n  }\n\n  \n\n  // componentDidUpdate(prevprops) {\n  //   console.log(this.state.counter);\n  //   if (prevprops.counter === 0 /*&&  */) {\n  //     this.handleWinnerLeft();\n  //   } else if (prevprops.counter === 0 /*&&  */) {\n  //     this.handleWinnerRight();\n  //   }\n  // }\n\n  handleWinnerLeft = () => {\n    this.setState({ winP1: true });\n  };\n\n  handleWinnerRight = () => {\n    this.setState({ winP2: true });\n  };\n\n  handleCloseModal = () => {\n    this.setState({ modaleIsOpen: !this.state.modaleIsOpen });\n  };\n\n  handleSetTimeOut = () => {\n    const x = this;\n    const { counter } = this.state;\n    setTimeout(function() {\n      if (counter > 0 && counter !== 0) {\n        x.setState({ counter: counter - 1 });\n      }\n    }, 1000);\n  };\n\n  render() {\n    const { modaleIsOpen, counter } = this.state;\n    return (\n      <div className=\"mapFond\">\n        <div id={this.state.winP1 === true ? 'position1' : 'position2'}>\n          <div className=\"winnerIs\">\n            <p>YOU WIN</p>\n          </div>\n        </div>\n        <img className=\"fightMap\" src={mapFight} alt=\"\" />\n        <DisplayCountdown\n          counter={counter}\n          setTimeOut={this.handleSetTimeOut}\n          modaleIsOpen={modaleIsOpen}\n        />\n        <ModaleInstructions closeModal={this.handleCloseModal} modaleIsOpen={modaleIsOpen} />\n        <div className=\"fighters\">\n          <div className=\"leftPlayer\">\n            <Tap />\n            <img className=\"fighter1\" src={perso1} alt=\"harley\" />\n          </div>\n          <div className=\"rightPlayer\">\n            <Tap />\n            <img className=\"fighter2\" src={perso2} alt=\"deadpool\" />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default FightZone;\n"]},"metadata":{},"sourceType":"module"}